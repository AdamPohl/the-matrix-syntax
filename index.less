@import "./styles/syntax-variables.less";

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
  .is-focused .cursor {
      border-color: @Simmons;
    }

  // This looks after the colour of the line you are writing in.
  .is-focused, .line.cursor-line {
     background-color: @Caboose;
  }

  // This looks after the word selection.
  .selection .region {
    background-color: @syntax-selection-color;
	  background: repeating-linear-gradient(0deg, @Tex, @Tex 1px, @syntax-selection-color 2px, @syntax-selection-color 1px);
	  border-right: 2px solid @Sarge;
	  border-left: 2px solid @Sarge;
  }

  .is-focused, .line-number.cursor-line-no-selection{
    background-color: @Locus;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    border-right: 5px solid @syntax-gutter-border-color;
    color: @syntax-gutter-text-color;

    .line-number {
     &.cursor-line {
        background-color: @syntax-gutter-border-color;
        color: @Caboose;
     }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color;
      }
    }
  }

  .comment {
    color: @Washington;
  }
}

.entity {
  &.name.type {
    color: @York;
    text-decoration: underline;
  }

  &.name.function {
    color: @Maine;
  }

  &.name.class, &.name.type.class {
    color: @York;
  }

  &.name.section {
    color: @Maine;
  }

  &.name.tag {
    color: @Sarge;
    text-decoration: underline;
  }

  &.other.inherited-class {
    font-style: italic;
    color: @Delta;
  }

  &.other.attribute-name {
    color: @Grif;

    &.id {
      color: @Maine;
    }
  }
}

.keyword {
  color: @Doc;

  &.control {
    color: @Doc;
  }

  &.operator {
    color: @syntax-text-color;
  }

  &.other.special-method {
    color: @Maine;
  }

  &.other.unit {
    color: @Grif;
  }
}

.storage {
  color: @Doc;
}

.constant {
  color: @Grif;
}

.variable {
  color: @Sarge;

  &.interpolation {
    color: darken(@Sarge, 10%);
  }

  &.parameter.function {
    color: @syntax-text-color;
  }
}

.support {
  &.class {
    color: @York;
  }

  &.function  {
    color: @Tucker;

    &.any-method {
      color: @Maine;
    }
  }
}

.invalid.illegal {
  font-style: italic;
  color: @Sister;
}

.string {
  color: @a-lighter-shade-of-red;

  &.constant.other.placeholder {
    color: @Grif;
  }

  &.regexp {
    color: @Tucker;

    .source.ruby.embedded {
      color: @Grif;
    }
  }

  &.other.link {
    color: @Sarge;
  }
}

.punctuation {
  &.definition {
    &.comment {
      color: @Washington;
    }

    &.string{
      color: @syntax-text-color;
    }

    &.variable{
      color: @syntax-text-color;
    }

    &.parameters{
      color: @syntax-text-color;
    }

    &.array {
      color: @syntax-text-color;
    }

    &.heading,
    &.identity {
      color: @Maine;
    }

    &.bold {
      color: @York;
      font-style: bold;
    }

    &.italic {
      color: @Doc;
      font-style: italic;
    }
  }

  &.section.embedded {
    color: darken(@Sarge, 10%);
  }

}

.meta {
  &.class {
    color: @York;
  }

  &.link {
    color: @Grif;
  }

  &.require {
    color: @Maine;
  }

  &.selector {
    color: @Doc;
  }

  &.separator {
    background-color: @Warthog;
    color: @syntax-text-color;
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  &.bold {
    color: @Grif;
    font-style: bold;
  }

  &.changed {
    color: @Doc;
  }

  &.deleted {
    color: @Sarge;
  }

  &.italic {
    color: @Doc;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @Maine;
  }

  &.inserted {
    color: @Delta;
  }

  &.list {
    color: @Sarge;
  }

  &.quote {
    color: @Grif;
  }

  &.raw.inline {
    color: @Delta;
  }
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @Delta;
  }
}

.atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
